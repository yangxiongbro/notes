#!/bin/sh

lsb_functions="/lib/lsb/init-functions"
if test -f $lsb_functions ; then
  . $lsb_functions
else
  log_success_msg()
  {
    echo " SUCCESS! $@"
  }
  log_failure_msg()
  {
    echo " ERROR! $@"
  }
fi

server_name="Rabbitmq"
user="rabbitmq"
base_dir="/opt/apps/rabbitmq"
log_dir="/var/log/rabbitmq"
log_file="rabbitmq.nohup.log"
start_command="${base_dir}/sbin/rabbitmq-server"
mode=$1
process_id=$(ps -eo pid,cmd | fgrep -i 'nacos.nacos' | fgrep ${base_dir} | grep java | grep -v grep | awk '{print $1}')

echo "mode=${mode}, PID=${process_id}"
case "$mode" in
  'start')
    # Start daemon
    cd $base_dir
    echo "Starting ${server_name}"
    sleep 10s
    # 文件存在且可执行
    if test -x "$base_dir/sbin/rabbitmq-server" ; then
      # 文件存在并且是目录
      if ! test -d "$log_dir" ; then 
        mkdir $log_dir
      fi
      bash -c "sudo -u ${user} ${start_command}"
      exit 0
    else
      log_failure_msg "Couldn't find ${server_name} server (${base_dir}/sbin/rabbitmq-server)"
      exit 1
    fi
    ;;

  'stop')
    # 检测字符串长度大于0
    if test -n "$process_id" ; then
	  # kill -0 $pid中的-0表示不发送任何信号给PID对应的进程，但是仍会对变量值PID对应的进程是否存在进行检查，如果$pid对应的进程存在，则返回0，不存在返回1
	  # 2>/dev/null不输出错误信息
      if (kill -0 $process_id 2>/dev/null) ; then
        echo "Shutting down ${server_name}"
        kill $process_id
      else
        log_failure_msg "${server_name} server process #${process_id} is not running!"
      fi
    else
      log_failure_msg "${server_name} server PID could not be found!"
    fi
    ;;

  'restart')
    # Stop the service and regardless of whether it was
    # running or not, start it again.
	# 这里
    if $0 stop ; then
      $0 start
    else
      log_failure_msg "Failed to stop running ${server_name} server, so refusing to try to start."
      exit 1
    fi
    ;;

  'reload'|'force-reload')
    if test -n "$process_id" ; then 
      kill -HUP $process_id && log_success_msg "Reloading service ${server_name}"
    else
      log_failure_msg "${server_name} PID could not be found!"
      exit 1
    fi
    ;;
  'status')
    if test -n "$process_id" ; then
      if (kill -0 $process_id 2>/dev/null) ; then
        log_success_msg "${server_name} running ${process_id}"
        exit 0
      else
        log_failure_msg "${server_name} is not running, but PID exists"
        exit 1
      fi
    else
      log_failure_msg "${server_name} is not running"
      exit 0
    fi
    ;;
    *)
      # usage
      basename=`basename "$0"`
      echo "Usage: $basename  {start|stop|restart|reload|force-reload|status}  [ ${server_name} server options ]"
      exit 1
    ;;
esac

exit 0